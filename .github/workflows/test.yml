name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-go:
    name: Test Go
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
        cache-dependency-path: go/go.sum

    - name: Install Protocol Buffers
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install Go protobuf plugins
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

    - name: Install RocksDB
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
        # Build RocksDB from source to ensure compatibility with grocksdb
        wget https://github.com/facebook/rocksdb/archive/refs/tags/v10.4.2.tar.gz
        tar -xzf v10.4.2.tar.gz
        cd rocksdb-10.4.2
        make shared_lib -j$(nproc)
        sudo make install-shared
        sudo ldconfig
        cd ..

    - name: Generate protobuf files
      run: ./generate.sh

    - name: Run Go tests
      run: |
        cd go
        go mod download
        export CGO_CFLAGS="-I/usr/local/include"
        export CGO_LDFLAGS="-L/usr/local/lib -lrocksdb"
        # Check if there are any Go test files before running tests
        if find . -name "*_test.go" | grep -q .; then
          go test -v ./...
        else
          echo "No Go test files found, skipping tests"
        fi

  test-rust:
    name: Test Rust
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        cache: true

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler librocksdb-dev

    - name: Run Rust tests
      run: |
        cd rust
        # Run tests and capture output, checking for actual test failures
        set +e  # Don't exit on error
        OUTPUT=$(cargo test --verbose -- --test-threads=1 2>&1)
        EXIT_CODE=$?
        echo "$OUTPUT"
        # Check if all tests passed (look for the success message)
        if echo "$OUTPUT" | grep -q "test result: ok"; then
          echo "All tests passed successfully"
          exit 0
        else
          echo "Some tests failed"
          exit $EXIT_CODE
        fi

  test-benchmark:
    name: Test Benchmark (Thrift)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        cache: true
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler librocksdb-dev
    - name: Build Thrift server (debug)
      run: |
        cd rust
        cargo build --bin thrift-server
    - name: Run benchmark crate tests
      env:
        THRIFT_SERVER_BIN: ./rust/target/debug/thrift-server
      run: |
        cd benchmark-rust
        cargo test --verbose -- --nocapture
